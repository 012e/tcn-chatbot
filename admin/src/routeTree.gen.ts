/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DocumentIndexRouteImport } from './routes/document/index'
import { Route as ExampleChatRouteImport } from './routes/example.chat'
import { Route as DocumentNewRouteImport } from './routes/document/new'
import { Route as DocumentDocumentIdEditRouteImport } from './routes/document/$documentId.edit'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DocumentIndexRoute = DocumentIndexRouteImport.update({
  id: '/document/',
  path: '/document/',
  getParentRoute: () => rootRouteImport,
} as any)
const ExampleChatRoute = ExampleChatRouteImport.update({
  id: '/example/chat',
  path: '/example/chat',
  getParentRoute: () => rootRouteImport,
} as any)
const DocumentNewRoute = DocumentNewRouteImport.update({
  id: '/document/new',
  path: '/document/new',
  getParentRoute: () => rootRouteImport,
} as any)
const DocumentDocumentIdEditRoute = DocumentDocumentIdEditRouteImport.update({
  id: '/document/$documentId/edit',
  path: '/document/$documentId/edit',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/document/new': typeof DocumentNewRoute
  '/example/chat': typeof ExampleChatRoute
  '/document': typeof DocumentIndexRoute
  '/document/$documentId/edit': typeof DocumentDocumentIdEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/document/new': typeof DocumentNewRoute
  '/example/chat': typeof ExampleChatRoute
  '/document': typeof DocumentIndexRoute
  '/document/$documentId/edit': typeof DocumentDocumentIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/document/new': typeof DocumentNewRoute
  '/example/chat': typeof ExampleChatRoute
  '/document/': typeof DocumentIndexRoute
  '/document/$documentId/edit': typeof DocumentDocumentIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/document/new'
    | '/example/chat'
    | '/document'
    | '/document/$documentId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/document/new'
    | '/example/chat'
    | '/document'
    | '/document/$documentId/edit'
  id:
    | '__root__'
    | '/'
    | '/document/new'
    | '/example/chat'
    | '/document/'
    | '/document/$documentId/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DocumentNewRoute: typeof DocumentNewRoute
  ExampleChatRoute: typeof ExampleChatRoute
  DocumentIndexRoute: typeof DocumentIndexRoute
  DocumentDocumentIdEditRoute: typeof DocumentDocumentIdEditRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/document/': {
      id: '/document/'
      path: '/document'
      fullPath: '/document'
      preLoaderRoute: typeof DocumentIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/example/chat': {
      id: '/example/chat'
      path: '/example/chat'
      fullPath: '/example/chat'
      preLoaderRoute: typeof ExampleChatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/document/new': {
      id: '/document/new'
      path: '/document/new'
      fullPath: '/document/new'
      preLoaderRoute: typeof DocumentNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/document/$documentId/edit': {
      id: '/document/$documentId/edit'
      path: '/document/$documentId/edit'
      fullPath: '/document/$documentId/edit'
      preLoaderRoute: typeof DocumentDocumentIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DocumentNewRoute: DocumentNewRoute,
  ExampleChatRoute: ExampleChatRoute,
  DocumentIndexRoute: DocumentIndexRoute,
  DocumentDocumentIdEditRoute: DocumentDocumentIdEditRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
